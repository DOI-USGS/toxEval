% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_chemical_boxplots.R,
%   R/plot_group_boxplots.R
\name{plot_chemical_boxplots}
\alias{plot_chemical_boxplots}
\alias{graph_chem_data}
\alias{plot_tox_boxplots}
\alias{tox_boxplot_data}
\title{plot_tox_boxplots}
\usage{
plot_chemical_boxplots(chemicalSummary, manual_remove = NULL,
  mean_logic = FALSE, plot_ND = TRUE, font_size = NA, title = NA)

graph_chem_data(chemicalSummary, manual_remove = NULL, mean_logic = FALSE)

plot_tox_boxplots(chemicalSummary, category = "Biological",
  manual_remove = NULL, mean_logic = FALSE, plot_ND = TRUE,
  font_size = NA, title = NA)

tox_boxplot_data(chemicalSummary, category = "Biological",
  manual_remove = NULL, mean_logic = FALSE)
}
\arguments{
\item{chemicalSummary}{data frame from \code{get_chemical_summary}}

\item{manual_remove}{vector of categories to remove}

\item{mean_logic}{logical \code{TRUE} is mean, \code{FALSE} is maximum}

\item{plot_ND}{logical whether or not to plot the non-detects}

\item{font_size}{numeric to adjust the axis font size}

\item{title}{character title for plot.}

\item{category}{either "Biological", "Chemical Class", or "Chemical"}
}
\description{
Plot boxplot of groups
}
\examples{
# This is the example workflow:
path_to_tox <-  system.file("extdata", package="toxEval")
file_name <- "OWC_data_fromSup.xlsx"

full_path <- file.path(path_to_tox, file_name)

\dontrun{
tox_list <- create_toxEval(full_path)
ACClong <- get_ACC(tox_list$chem_info$CAS)
ACClong <- remove_flags(ACClong)

cleaned_ep <- clean_endPoint_info(endPointInfo)
filtered_ep <- filter_groups(cleaned_ep)
chemicalSummary <- get_chemical_summary(tox_list, ACClong, filtered_ep)
plot_tox_boxplots(chemicalSummary, "Biological")   
plot_tox_boxplots(chemicalSummary, "Chemical Class")
plot_tox_boxplots(chemicalSummary, "Chemical")

 # To turn off clipping:
class_plot <- plot_tox_boxplots(chemicalSummary, "Chemical Class")
gb <- ggplot2::ggplot_build(class_plot)
gt <- ggplot2::ggplot_gtable(gb)

gt$layout$clip[gt$layout$name=="panel"] <- "off"

grid::grid.draw(gt) 
}
}
