% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_tox_endpoints.R
\name{plot_tox_endpoints}
\alias{plot_tox_endpoints}
\title{EndPoint boxplots}
\usage{
plot_tox_endpoints(chemicalSummary, category = "Biological",
  filterBy = "All", manual_remove = NULL, hit_threshold = 0.1,
  mean_logic = FALSE, font_size = NA, title = NA, pallette = NA)
}
\arguments{
\item{chemicalSummary}{data frame from \code{get_chemical_summary}}

\item{category}{either "Biological", "Chemical Class", or "Chemical"}

\item{filterBy}{character either "All" or one of the filtered categories.}

\item{manual_remove}{vector of categories to remove}

\item{hit_threshold}{numeric threshold defining a "hit"}

\item{mean_logic}{logical \code{TRUE} is mean, \code{FALSE} is maximum}

\item{font_size}{numeric to adjust the axis font size}

\item{title}{character title for plot.}

\item{pallette}{vector of color pallette for fill. Can be a named vector
to specify specific color for specific categories.}
}
\description{
This function creates a set of boxplots for each endPoint based on a selected 
filter. The data is first filtered down to what group is specified in the 'filterBy' 
argument. The 'filterBy' argument must match one of the unique options in the 'category'. 
So for example, if the 'category' is "Chemical Class", then the 'filterBy' argument must 
be one of the defined "Chemical Class" options such as "Herbicide".
}
\details{
After the data is filtered, a boxplot is generated for each endPoint. The EAR values 
that are used to create the boxplots are still the mean or max (as defined by 'mean_logic') 
of each site.
}
\examples{
# This is the example workflow:
path_to_tox <-  system.file("extdata", package="toxEval")
file_name <- "OWC_data_fromSup.xlsx"

full_path <- file.path(path_to_tox, file_name)

\dontrun{
tox_list <- create_toxEval(full_path)
ACClong <- get_ACC(tox_list$chem_info$CAS)
ACClong <- remove_flags(ACClong)

cleaned_ep <- clean_endPoint_info(endPointInfo)
filtered_ep <- filter_groups(cleaned_ep)
chemicalSummary <- get_chemical_summary(tox_list, ACClong, filtered_ep)

plot_tox_endpoints(chemicalSummary, filterBy = "Cell Cycle")
plot_tox_endpoints(chemicalSummary, category = "Chemical Class", filterBy = "PAHs")
plot_tox_endpoints(chemicalSummary, category = "Chemical", filterBy = "Atrazine")

 # To turn off clipping:
class_plot <- plot_tox_endpoints(chemicalSummary, filterBy = "Cell Cycle")
gb <- ggplot2::ggplot_build(class_plot)
gt <- ggplot2::ggplot_gtable(gb)

gt$layout$clip[gt$layout$name=="panel"] <- "off"

grid::grid.draw(gt) 
}
}
